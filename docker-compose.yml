services:
  avito-shop-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: avito-shop-service
    restart: always
    ports:
      - "8080:${HTTP_PORT}"
    environment:
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}

      - HTTP_HOST=${HTTP_HOST}
      - HTTP_PORT=${HTTP_PORT}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
#    volumes:
#      - ./:/app
  db:
    image: postgres:13
    command: >
      -c max_connections=1500
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgsql:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal
networks:
  internal:
volumes:
  pgsql: